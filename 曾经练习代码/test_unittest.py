#TDD Test-Driven-Development 单元测试
#用来对一个模块，一个函数，一个类进行正确性检验的测试工作
'''
对于abs()函数，编写以下几个测试用例:
1.输入正数:期待返回值与输入相同
2.输入负数:期待返回值与输入相反
3.输入0:期待返回值为0
4.输入非数值类型:期待抛出T云鹏Error错误
将上述测试用例放在一个测试模块，就是一个完整的单元测试
若单元测试通过，说明测试的函数abs通过可正常工作
若单元测试不能通过，要么程序有bug，要么测试条件输入不正确
通过修复是单元测试能够通过
若是对abs函数本身代码做了修改，只需再跑一遍单元测试：
若通过则修改本身不会对abs函数原有行为造成影响
若不能通过说明修改与原有行为不一致，要么修改代码本身，要么修改测试
###########行为即效果，测试效果##############
'''
#example：
#编写一个Dict类，此类行为与dict类一致 
#通过attribute来访问（测试功能）若是可以实现一下功能则与之一致
'''
d = Dict(a=1,b=2)
d['a']
d.a
'''
#定义Dict新类--被测试类
#test_mydict.py
#定义TestDict类--测试类
#test_mydict_test.py
